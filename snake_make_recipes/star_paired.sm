# USAGE
#snakemake --cores 20 -s star.sm

# ASSUMPTIONS:
# PAIRED READS named *_[12].fastq.gz

OUTFOLDER = "/home/ekornobis/analysis/batsche/badeg"
DATAFOLDER = "/home/ekornobis/analysis/batsche/badeg/data"

#SAMPLE = ["SRR019721", "SRR019722", "SRR019723", "SRR019724", "SRR019725"]
SAMPLE = ["SRR869302", "SRR869302", "SRR869303", "SRR869303", "SRR869304", "SRR869304", "SRR869305", "SRR869305", "SRR869306", "SRR869306", "SRR869307", "SRR869307", "SRR869308", "SRR869308", "SRR869309", "SRR869309", "SRR869310", "SRR869310", "SRR869311", "SRR869311", "SRR869312", "SRR869312", "SRR869313", "SRR869313"]

GFAS = "/home/ekornobis/data/genomes/ensembl/h_sapiens/Homo_sapiens.GRCh37.75.dna_sm.toplevel.fa"
GTF = "/home/ekornobis/data/genomes/ensembl/h_sapiens/Homo_sapiens.GRCh37.75.gtf"
GDIR = "/home/ekornobis/data/genomes/ensembl/h_sapiens"

rule targets:
    input:
        expand("{gdir}/star_index_GRCh37", gdir=GDIR),
        expand("{out}/mapped_reads/{sample}_pass2_Aligned.sortedByCoord.out.bam", out=OUTFOLDER, sample=SAMPLE),
        expand("{out}/mapped_reads/{sample}_pass1_SJ.out.tab", out=OUTFOLDER, sample=SAMPLE),
        expand("{out}/mapped_reads/{sample}_pass2_SJ.out.tab", out=OUTFOLDER, sample=SAMPLE),
        expand("{out}/mapped_reads/total_SJ.tab", out=OUTFOLDER),

    #This step does not seem to work for human genome (asking for too much memory)
rule make_index:
    input:
        fas = GFAS,
    output:
        idx_dir = expand("{gdir}/star_index_GRCh37", gdir=GDIR)
    params:
        threads = 20
    shell:
        "mkdir {output.idx_dir} && STAR --runMode genomeGenerate --genomeDir {output.idx_dir} --genomeFastaFiles {input.fas} --runThreadN {params.threads}"

rule pass1:
    input:
        gtf = GTF,
        idx_dir = expand("{gdir}/star_index_GRCh37", gdir=GDIR),
        read1 = expand("{data}/{sample}_1.fastq.gz", data=DATAFOLDER, sample=SAMPLE),
        read2 = expand("{data}/{sample}_2.fastq.gz", data=DATAFOLDER, sample=SAMPLE),
    output:
        "{OUTFOLDER}/mapped_reads/{sample}_pass1_Aligned.sortedByCoord.out.bam",
        "{OUTFOLDER}/mapped_reads/{sample}_pass1_SJ.out.tab"
        
    params:
        threads = 20
    shell:
        "STAR --genomeDir {input.idx_dir} --readFilesIn {input.read1} {input.read2} --sjdbGTFfile {input.gtf} --outFileNamePrefix {OUTFOLDER}/mapped_reads/{wildcards.sample}_pass1_ --outSAMtype BAM SortedByCoordinate --runThreadN {params.threads} --readFilesCommand zcat"

rule merge_SJ_files:
    input:
        expand('{out}/mapped_reads/{sample}_pass1_SJ.out.tab', out=OUTFOLDER, sample=SAMPLE)
    output:
        txt = "{OUTFOLDER}/mapped_reads/total_SJ.tab"
    shell:
        'cat {input} > {output}'

rule pass2:
    input:
        gtf = GTF,
        idx_dir = "/home/ekornobis/data/genomes/ensembl/c_elegans/star_index",
        read1 = expand("{data}/{sample}_1.fastq.gz", data=DATAFOLDER, sample=SAMPLE),
        read2 = expand("{data}/{sample}_2.fastq.gz", data=DATAFOLDER, sample=SAMPLE),
        sj = '{OUTFOLDER}/mapped_reads/total_SJ.tab'
    output:
        "{OUTFOLDER}/mapped_reads/{sample}_pass2_Aligned.sortedByCoord.out.bam",
        "{OUTFOLDER}/mapped_reads/{sample}_pass2_SJ.out.tab"
        
    params:
        threads = 20
    shell:
        "STAR --genomeDir {input.idx_dir} --readFilesIn {input.read1} {input.read2} --sjdbGTFfile {input.gtf} --quantMode GeneCounts --sjdbFileChrStartEnd {input.sj} --outFileNamePrefix {OUTFOLDER}/mapped_reads/{wildcards.sample}_pass2_ --outSAMtype BAM SortedByCoordinate --runThreadN {params.threads} --readFilesCommand zcat"
